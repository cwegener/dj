version: "2.2"

volumes:
  metadata_data: {}
  middle_var: {}
  historical_var: {}
  broker_var: {}
  coordinator_var: {}
  router_var: {}
  postgres_data: {}
  postgres_metadata: {}
  redis_data: {}


services:
  dj:
    container_name: dj
    environment:
      - DOTENV_FILE=.env-docker
    build: .
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - db_migration
      - postgres_metadata
      - postgres_examples
      - redis

  celery:
    container_name: celery
    environment:
      - DOTENV_FILE=.env-docker
    build: .
    volumes:
      - .:/code
    depends_on:
      - dj
    command: celery -A datajunction.api.queries.celery worker --loglevel=info

  watchdog:
    container_name: watchdog
    environment:
      - DOTENV_FILE=.env-docker
    build: .
    volumes:
      - .:/code
    depends_on:
      - dj
    command: dj compile --reload

  db_migration:
    container_name: db_migration
    environment:
      - DOTENV_FILE=.env-docker
    build: .
    volumes:
      - .:/code
    depends_on:
      - postgres_metadata
    command: alembic upgrade head

  redis:
    image: redis:latest
    container_name: query_broker
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  postgres_metadata:
    container_name: postgres_metadata
    image: postgres:latest
    volumes:
      - postgres_metadata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=FoolishPassword
      - POSTGRES_USER=username
      - POSTGRES_DB=dj
    ports:
      - "5434:5432"

  postgres_examples:
    container_name: postgres_examples
    image: postgres:latest
    volumes:
      - ./examples/docker/postgres_init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=FoolishPassword
      - POSTGRES_USER=username
      - POSTGRES_DB=examples
    ports:
      - "5433:5432"
